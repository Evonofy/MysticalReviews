---
import "@/styles/main.scss";
import { Post } from "@/components/layout/pages/post";

import { Navbar } from "@/components/Navbar";
import { Footer } from "@/components/Footer";
import { getCards, notion, notion as notionClient } from "@/data";
import { Client } from "@notionhq/client";
import { NotionToMarkdown } from "notion-to-md";
import { marked } from "marked";
import { slugify } from "@/slugify";

const cards = await getCards();

const cardSlug = Astro.params.slug!;

const card = cards.find((card) => slugify(card.title) === cardSlug);

if (!card) {
  return new Response(null, {
    status: 404,
    statusText: "Not found",
  });
}

const notion2Markdown = new NotionToMarkdown({
  notionClient,
});

const pageInMDBlocks = await notion2Markdown.pageToMarkdown(card.notionPageID);
const pageContentInMarkdown = notion2Markdown.toMarkdownString(pageInMDBlocks);
const content = marked.parse(pageContentInMarkdown);
// export async function getStaticPaths() {
//   const { slugify } = await import("@/slugify");

//   const cardsWithContent = cards.map(({ title, ...props }) => {
//     return {
//       params: {
//         slug: slugify(title),
//       },
//       props: {
//         title,
//         ...props,
//       },
//     };
//   });

//   return cardsWithContent;
// }

// const card = Astro.props as CardProps;

// const getContent = async (notionPageID: string) => {
//   let content = "";
//   try {
//     console.log(notionPageID);
//     const pageInMDBlocks = await notion2Markdown.pageToMarkdown(notionPageID);
//     const pageContentInMarkdown =
//       notion2Markdown.toMarkdownString(pageInMDBlocks);
//     content = marked.parse(pageContentInMarkdown);
//   } catch (error) {
//     console.log("errored no html");
//   }

//   return content;
// };
// console.log(card.notionPageID);
// const content = await getContent(card.notionPageID);
// console.log(content);
---

<!DOCTYPE html>
<html lang="pt-BR">
  <head>
    <meta charset="UTF-8" />

    <meta
      name="viewport"
      content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no"
    />

    <!-- favicon -->
    <meta name="generator" content={Astro.generator} />

    <!-- <title>{card.title} - MysticalReviews</title> -->
  </head>

  <body>
    <Navbar currentPage="" client:only="react" />

    <Post {...card} content={content} client:only="react" />

    <Footer client:only="react" />
  </body>
</html>
